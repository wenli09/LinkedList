S1:recursion Leetcode accepted it.
public ListNode reverseList(ListNode head){
  if (head == null || head. next == null {
    return head; 
  }
  ListNode newHead = reverseList(head, ncxt);
  // wall
  head.next, next = head;
  head.next = null;
  return newHead;
  }
  
middle of linklist

 public ListNode middleNode(ListNode head) {
        if (head == null || head.next == null) return head;
	ListNode slow = head;
	ListNode fast = head.next;
	while(fast != null && fast.next != null) {
		slow = slow.next;
		fast = fast.next.next;
	}
	return slow; 

		}
}

        
